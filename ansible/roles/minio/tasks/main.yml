#SPDX-License-Identifier: MIT-0
---
# tasks file for minio

- name: Download MinIO .deb
  ansible.builtin.get_url:
#      url: https://dl.min.io/server/minio/release/linux-amd64/minio_{{ minio_version }}.deb
      url: https://dl.min.io/server/minio/release/linux-amd64/archive/minio_{{ minio_version }}.deb
      checksum: "{{ minio_checksum }}"
      dest: /tmp/minio.deb

- name: Install MinIO .deb
  ansible.builtin.apt:
    deb: /tmp/minio.deb
    state: present
  become: true

- name: create MinIO group
  ansible.builtin.group:
      name: minio-user
      state: present
  become: true

- name: create MinIO user
  ansible.builtin.user:
    name: minio-user
    group: minio-user
    shell: /sbin/nologin
    system: true
  become: true

- name: Ensure minio user/group owns the MinIO directories
  ansible.builtin.file:
    path: "/mnt/{{ item.value.label }}"
    owner: minio-user
    group: minio-user
    state: directory
    mode: '0750'
  become: true
  loop: "{{ volumes | dict2items }}"

- name: Create environment file for MinIO
  tags: minio_env_file
  ansible.builtin.template:
    src: minio.env.j2
    dest: /etc/default/minio
    mode: '0640'
    owner: root
    group: minio-user
  become: true

- name: Stop and disable apparmor
  tags: disable_apparmor
  ansible.builtin.systemd:
    name: apparmor
    enabled: false
    state: stopped
  become: true

- name: Enable and start MinIO service
  ansible.builtin.systemd:
    name: minio
    enabled: true
    state: started
  become: true

- name: Create MinIO CaddyFile
  tags: [minio_caddyfile, caddy]
  ansible.builtin.template:
    src: minio.caddyfile.j2
    dest: /etc/caddy/Caddyfile
    mode: '0644'
    owner: root
    group: root
  become: true
  register: caddyfile_result

- name: Reload Caddy if CaddyFile changed
  tags: [minio_caddyfile, caddy]
  ansible.builtin.command:
      cmd: caddy reload --config /etc/caddy/Caddyfile
  when: caddyfile_result.changed
  become: true

